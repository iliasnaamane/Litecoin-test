# Pipeline steps list
stages:
  - build
  - deploy

# Variables used in different stages
variables:
  REPO_NAME: litecoin

build:
  stage: build
  image:
    name: docker:stable
  services:
  - docker:stable-dind
  script:
    - docker build -t $REPO_NAME:$CI_COMMIT_REF_NAME .

scan:
  stage: scan
  image:
    name: anchore/anchore-engine:latest
  entrypoint: [""]
  services:
  - name: anchore/engine-db-preload:latest
    alias: anchore-db

  variables:
    GIT_STRATEGY: none
    ANCHORE_HOST_ID: "localhost"
    ANCHORE_ENDPOINT_HOSTNAME: "localhost"
    ANCHORE_CLI_USER: "admin"
    ANCHORE_CLI_PASS: "foobar"
    ANCHORE_CLI_SSL_VERIFY: "n"
    ANCHORE_FAIL_ON_POLICY: "true"
    ANCHORE_TIMEOUT: 500
  script:
    - |
    curl -o /tmp/anchore_ci_tools.py https://raw.githubusercontent.com/anchore/ci-tools/master/scripts/anchore_ci_tools.py
    chmod +x /tmp/anchore_ci_tools.py
    ln -s /tmp/anchore_ci_tools.py /usr/local/bin/anchore_ci_tools
    - anchore_ci_tools --setup
    - anchore-cli registry add "$CI_REGISTRY" gitlab-ci-token "$CI_JOB_TOKEN" --skip-validate
    - anchore_ci_tools --analyze --report --image "$REPO_NAME:$CI_COMMIT_REF_NAME" --timeout "$ANCHORE_TIMEOUT"
    - |
    if ; then
    anchore-cli evaluate check "$REPO_NAME:$CI_COMMIT_REF_NAME"
    else
    set +o pipefail
    anchore-cli evaluate check "$REPO_NAME:$CI_COMMIT_REF_NAME" | tee /dev/null
    fi


push:
  stage: push
  image:
    name: docker:stable
  services:
  - docker:stable-dind
  script:
    - docker tag $$REPO_NAME:$CI_COMMIT_REF_NAME $REPO_REGISTRY_URL:$TAG
    - docker push $REPO_REGISTRY_URL:$TAG
    - docker rmi $$REPO_NAME:$CI_COMMIT_REF_NAME $REPO_REGISTRY_URL:$TAG

deploy:
  stage: deploy
  image: alpine/helm:latest
  script:
    - helm init --client-only
    - helm --namespace $NAMESPACE upgrade -i $REPO_NAME --set image.tag=$TAG,env=$ENV,image.repository=$REPO_REGISTRY_URL $PATH_TO_VALUES
  tags:
    - k8s
    - dev
